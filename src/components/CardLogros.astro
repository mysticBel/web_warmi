---
interface Props {
  number: string;
  text: string;
}
const { number, text } = Astro.props;
---

<li class="link-card">
  <div>
    <h1>
      {number}
    </h1>
    <p>
      {text}
    </p>
  </div>
</li>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const animateNumbers = () => {
      const cards = document.querySelectorAll(".link-card h1");

      cards.forEach((card) => {
        const textContent = card.textContent?.replace(/\D/g, "");
        if (textContent) {
          const targetNumber = parseInt(textContent, 10);
          let currentNumber = 0;
          const increment = targetNumber / 200;

          const updateNumber = () => {
            currentNumber += increment;
            if (currentNumber < targetNumber) {
              card.textContent = `+${Math.floor(currentNumber)}`;
              requestAnimationFrame(updateNumber);
            } else {
              card.textContent = `+${targetNumber}`;
            }
          };

          updateNumber();
        }
      });
    };

    animateNumbers();
  });
</script>
<style>
  .link-card {
    list-style: none;
    display: flex;
    padding: 10px;
    width: 50%;
    justify-content: center;
    align-items: center;
    text-align: center;
    background-color: transparent;
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px #fff;
    color: #fff;
    transition: all 0.8s cubic-bezier(0.15, 0.83, 0.66, 1);
  }
  .link-card > div {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: transparent;
    opacity: 0.8;
  }
  h1 {
    margin: 0;
    font-size: 2.5rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    font-weight: 700;
    color: #fff;
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    color: #fff;
  }
  .link-card:is(:hover, :focus-within) {
    transform: scale(1.05);
  }
  /* responsive */
  @media screen and (max-width: 640px) {
    .link-card {
      width: 60%;
    }
    .link-card {
      flex-direction: column;
      flex-wrap: wrap;
    }
  }
</style>
