---
interface Props {
  title: string;
  content: string;
  link: string;
}

const { title, content, link } = Astro.props as Props;
---
<div class="accordion">
  <div class="accordion-header">
    {title}
    <span class="expand-icon"><svg width="35" height="35" viewBox="0 0 44 48" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M11.8672 30L22.69 18L33.5128 30" stroke="#7651EE" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        </span>
  </div>
  <div class="accordion-content">
    {content}
    <a href={link} class="link">link</a>
  </div>
</div>
<style>
  .accordion {
    border-radius: 4px;
    margin: 10px 0;
    overflow: hidden;
    width: 100%;
    padding: 1rem;
  }

  .accordion-header {
    background: #fff;
    cursor: pointer;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #7651EE;
    font-size: 1.2rem;
    color: #575757;
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    padding: 0 15px;
    background-color: #E8E0FF;
    color: #4A3288;
    font-size: 1rem;
    transition: max-height 0s ease-out, padding 0.3s ease-out;
  }

  .accordion-content.open {
    max-height: 500px; /* Set a max height that's high enough to fit the content */
    padding: 10px 15px;
  }

  .expand-icon {
    transition: transform 0s ease;
  }

  .expand-icon.open {
    transform: rotate(180deg);
  }
</style>
<script>
  document.querySelectorAll('.accordion-header').forEach(header => {
    header.addEventListener('click', (event) => {
      const currentHeader = event.currentTarget as HTMLElement;
      const currentContent = currentHeader.nextElementSibling as HTMLElement;
      const currentIcon = currentHeader.querySelector('.expand-icon') as HTMLElement;

      // Close all other accordions
      document.querySelectorAll('.accordion-content').forEach(content => {
        if (content !== currentContent) {
          content.classList.remove('open');
          content.previousElementSibling?.querySelector('.expand-icon')?.classList.remove('open');
        }
      });

      // Toggle current accordion
      currentContent.classList.toggle('open');
      currentIcon.classList.toggle('open');
    });
  });
</script>
